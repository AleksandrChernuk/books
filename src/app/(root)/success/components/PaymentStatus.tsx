"use client";

import Container from "@/components/shared/Container";
import Wrapper from "@/components/shared/Wrapper";
import { Button } from "@/components/ui/button";
import { useRouter } from "next/navigation";
import { useEffect, useState } from "react";

type Props = {
  orderId: string;
};

type OrderResponse = {
  status: string | null;
  bookUrl: string | null;
  filename?: string | null;
  salesType: string | null;
};

export default function PaymentStatus({ orderId }: Props) {
  const [downloading, setDownloading] = useState(false);
  const [status, setStatus] = useState<string | null>(null);
  const [bookUrl, setBookUrl] = useState<string | null>(null);
  const [salesType, setSalesType] = useState<string | null>(null);

  const [filename, setFilename] = useState<string | null>(null);
  const [loading, setLoading] = useState(true);
  const router = useRouter();
  useEffect(() => {
    const load = async () => {
      try {
        const res = await fetch(`/api/invoice-status?invoiceId=${orderId}`);
        const data: OrderResponse = await res.json();
        setStatus(data.status);
        setBookUrl(data.bookUrl || null);
        setFilename(data.filename || null);
        setSalesType(data.salesType || null);
      } catch (err) {
        console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–∞—Ç—É—Å—É:", err);
      } finally {
        setLoading(false);
      }
    };
    load();
  }, [orderId]);

  if (loading)
    return (
      <section className="h-full">
        <Container className="h-full">
          <Wrapper className="h-full">
            <div className="flex items-center justify-center h-full">
              <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>
            </div>
          </Wrapper>
        </Container>
      </section>
    );

  if (!status)
    return (
      <section className="h-full">
        <Container className="h-full">
          <Wrapper className="h-full">
            <div className="flex items-center justify-center gap-4 h-full">
              <p>–°—Ç–∞—Ç—É—Å –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ</p>
              <Button onClick={() => router.refresh()} variant={"default"}>
                –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ
              </Button>
            </div>
          </Wrapper>
        </Container>
      </section>
    );

  if (status !== "success")
    return (
      <section className="h-full">
        <Container className="h-full">
          <Wrapper className="h-full">
            <div className="flex flex-col items-center justify-center gap-4 h-full text-center">
              <p className="text-lg font-medium">
                –ù–∞ –∂–∞–ª—å, –æ–ø–ª–∞—Ç–∞ –Ω–µ –±—É–ª–∞ —É—Å–ø—ñ—à–Ω–æ—é –∞–±–æ —Å—Ç–∞—Ç—É—Å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π.
              </p>
              <Button onClick={() => router.push("/books")} variant="default">
                –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑
              </Button>
              <Button onClick={() => router.push("/")} variant="outline">
                –ù–∞ –≥–æ–ª–æ–≤–Ω—É
              </Button>
            </div>
          </Wrapper>
        </Container>
      </section>
    );

  const handleDownload = async () => {
    setDownloading(true);
    if (bookUrl) {
      try {
        const response = await fetch(bookUrl); // CORS –ø–æ—Ç—Ä—ñ–±–Ω–∏–π
        if (!response.ok) throw new Error("–§–∞–π–ª –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π");
        const blob = await response.blob();
        const blobUrl = URL.createObjectURL(blob);

        const link = document.createElement("a");
        link.href = blobUrl;
        link.download = filename || "ebook";
        document.body.appendChild(link);
        link.click();
        link.remove();

        // –ó–≤—ñ–ª—å–Ω—è—î–º–æ —Ä–µ—Å—É—Ä—Å–∏
        URL.revokeObjectURL(blobUrl);
      } catch (error) {
        console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å–∫–∞—á—É–≤–∞–Ω–Ω—ñ —Ñ–∞–π–ª—É:", error);
        setDownloading(false);
      } finally {
        setDownloading(false);
      }
    }
  };

  return (
    <section className="h-full">
      <Container className="h-full">
        <Wrapper className="py-16 h-full flex items-center justify-center flex-col text-center space-y-4">
          <h1 className="text-2xl font-semibold mb-4">
            üéâ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ–π—à–ª–∞ —É—Å–ø—ñ—à–Ω–æ!
          </h1>

          {status === "success" && salesType === "ebook" && bookUrl && (
            <div className="space-y-4">
              <p className="text-base text-muted-foreground">
                –î—è–∫—É—î–º–æ –∑–∞ –ø–æ–∫—É–ø–∫—É –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ—ó –∫–Ω–∏–≥–∏! –í–∏ –º–æ–∂–µ—Ç–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —ó—ó
                –æ–¥—Ä–∞–∑—É, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ.
              </p>
              <Button
                onClick={handleDownload}
                variant="outline"
                disabled={downloading}
              >
                {downloading ? "–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è..." : "üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∫–Ω–∏–≥—É"}
              </Button>
              <p className="text-sm text-muted-foreground">
                üìß –ö–æ–ø—ñ—è –∫–Ω–∏–≥–∏ —Ç–∞–∫–æ–∂ –±—É–ª–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –≤–∞—à—É –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É.
              </p>
              <Button onClick={() => router.push("/")} variant="default">
                –ù–∞ –≥–æ–ª–æ–≤–Ω—É
              </Button>
            </div>
          )}

          {salesType === "paper" && (
            <div className="space-y-2">
              <h5 className="text-xl font-medium">
                –î—è–∫—É—î–º–æ –∑–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø–∞–ø–µ—Ä–æ–≤–æ—ó –∫–Ω–∏–≥–∏! üìö
              </h5>
              <p className="text-base text-muted-foreground">
                –ú–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –≤–∞—à—É –æ–ø–ª–∞—Ç—É —Ç–∞ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º –Ω–∞–¥—ñ—à–ª–µ–º–æ –∫–Ω–∏–≥—É –Ω–∞
                –≤–∫–∞–∑–∞–Ω—É –∞–¥—Ä–µ—Å—É. –°–ª—ñ–¥–∫—É–π—Ç–µ –∑–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º–∏ ‚Äî –ø–æ–≤—ñ–¥–æ–º–∏–º–æ –≤–∞—Å, —â–æ–π–Ω–æ
                –≤—ñ–¥–ø—Ä–∞–≤–∏–º–æ –ø–æ—Å–∏–ª–∫—É.
              </p>
              <Button onClick={() => router.push("/")} variant="default">
                –ù–∞ –≥–æ–ª–æ–≤–Ω—É
              </Button>
            </div>
          )}
        </Wrapper>
      </Container>
    </section>
  );
}
